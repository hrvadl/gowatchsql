// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hrvadl/gowatchsql/internal/domain/engine (interfaces: Explorer)
//
// Generated by this command:
//
//	mockgen -destination=mock_factory.go -package=engine . Explorer
//

// Package engine is a generated GoMock package.
package engine

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockExplorer is a mock of Explorer interface.
type MockExplorer struct {
	ctrl     *gomock.Controller
	recorder *MockExplorerMockRecorder
	isgomock struct{}
}

// MockExplorerMockRecorder is the mock recorder for MockExplorer.
type MockExplorerMockRecorder struct {
	mock *MockExplorer
}

// NewMockExplorer creates a new mock instance.
func NewMockExplorer(ctrl *gomock.Controller) *MockExplorer {
	mock := &MockExplorer{ctrl: ctrl}
	mock.recorder = &MockExplorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExplorer) EXPECT() *MockExplorerMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockExplorer) Execute(ctx context.Context, query string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", ctx, query)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockExplorerMockRecorder) Execute(ctx, query any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockExplorer)(nil).Execute), ctx, query)
}

// GetColumns mocks base method.
func (m *MockExplorer) GetColumns(ctx context.Context, table string) ([][]string, []string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetColumns", ctx, table)
	ret0, _ := ret[0].([][]string)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetColumns indicates an expected call of GetColumns.
func (mr *MockExplorerMockRecorder) GetColumns(ctx, table any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetColumns", reflect.TypeOf((*MockExplorer)(nil).GetColumns), ctx, table)
}

// GetConstraints mocks base method.
func (m *MockExplorer) GetConstraints(ctx context.Context, table string) ([][]string, []string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConstraints", ctx, table)
	ret0, _ := ret[0].([][]string)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetConstraints indicates an expected call of GetConstraints.
func (mr *MockExplorerMockRecorder) GetConstraints(ctx, table any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConstraints", reflect.TypeOf((*MockExplorer)(nil).GetConstraints), ctx, table)
}

// GetIndexes mocks base method.
func (m *MockExplorer) GetIndexes(ctx context.Context, table string) ([][]string, []string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIndexes", ctx, table)
	ret0, _ := ret[0].([][]string)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetIndexes indicates an expected call of GetIndexes.
func (mr *MockExplorerMockRecorder) GetIndexes(ctx, table any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIndexes", reflect.TypeOf((*MockExplorer)(nil).GetIndexes), ctx, table)
}

// GetRows mocks base method.
func (m *MockExplorer) GetRows(ctx context.Context, table string) ([][]string, []string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRows", ctx, table)
	ret0, _ := ret[0].([][]string)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetRows indicates an expected call of GetRows.
func (mr *MockExplorerMockRecorder) GetRows(ctx, table any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRows", reflect.TypeOf((*MockExplorer)(nil).GetRows), ctx, table)
}

// GetTables mocks base method.
func (m *MockExplorer) GetTables(ctx context.Context) ([]Table, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTables", ctx)
	ret0, _ := ret[0].([]Table)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTables indicates an expected call of GetTables.
func (mr *MockExplorerMockRecorder) GetTables(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTables", reflect.TypeOf((*MockExplorer)(nil).GetTables), ctx)
}
